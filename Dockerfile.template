################################################################################
# Base image
################################################################################

FROM balenalib/raspberrypi4-64-debian:buster as base

ENV DEBIAN_FRONTEND=noninteractive

ENV LIGHTHOUSE_VERSION v0.1.1

################################################################################
# Rust image
################################################################################

FROM base as rust

RUN install_packages build-essential curl file git libudev-dev cmake clang libprotobuf-dev \
libssl-dev pkg-config ca-certificates vim \
&& apt-get clean \
&& rm -rf /var/lib/apt/lists/*

ENV PATH=/root/.cargo/bin:$PATH

WORKDIR /build

# Install rustup downloading the version specified by the standard rust-toolchain file
COPY rust-toolchain .
RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain `cat rust-toolchain`

################################################################################
# Dependencies
################################################################################

FROM rust as builder

WORKDIR /build

RUN git clone https://github.com/sigp/lighthouse && \
        cd lighthouse && git checkout $LIGHTHOUSE_VERSION && \
        echo 'leveldb = { git = "https://github.com/jacobrosenthal/leveldb.git", rev = "aarch64" }' >> Cargo.toml

WORKDIR /build/lighthouse

# Copy the file specifying the Rust version to use
COPY rust-toolchain ./

RUN cargo build --release --bin lighthouse

################################################################################
# Final image
################################################################################

FROM base

# Copy binary from builder image
COPY --from=builder /build/lighthouse/target/release/lighthouse /usr/local/lighthouse

CMD ["echo","'No CMD command was set in Dockerfile! Details about CMD command could be found in Dockerfile Guide section in our Docs. Here's the link: https://balena.io/docs"]
